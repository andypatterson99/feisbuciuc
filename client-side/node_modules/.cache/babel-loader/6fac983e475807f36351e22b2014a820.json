{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\Lateral-Internship\\\\Office\\\\feisbuciuc\\\\New folder\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport MainApp from './pages/main/MainApp';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport Edit from '../components/pages/editPost/Edit';\nimport { connect, useDispatch } from 'react-redux';\nimport history from '../history';\nimport SettingsPage from './pages/settings/SettingsPage';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [users, setUsers] = useState({});\n  const dispatch = useDispatch();\n  const UserStatus = localStorage.getItem(\"isTrue\") === \"true\" ? MainApp : Login;\n\n  const getUsers = async () => {\n    await axios.get(\"http://localhost:3001/users\").then(response => {\n      const data = { ...response.data\n      };\n      setUsers(data);\n    }).catch(() => {\n      alert(\"error receiving data\");\n    });\n  };\n\n  useEffect(() => {\n    if (_.isEmpty(users)) {\n      getUsers();\n    }\n\n    if (_.isEmpty(users) === false && _.isEmpty(currentUser) === true && localStorage.getItem(\"isTrue\") === \"true\") {\n      login();\n    }\n\n    console.log(currentUser);\n  }, [users, currentUser]);\n\n  const login = () => {\n    let item = _.find(users, {\n      _id: localStorage.getItem(\"token\")\n    });\n\n    setCurrentUser(item);\n  };\n\n  const logout = () => {\n    setIsLoggedIn(false);\n  };\n\n  const setUserToken = token => {\n    localStorage.setItem(\"token\", token);\n    login();\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(UserStatus, {\n          login: setUserToken,\n          users: users,\n          user: currentUser\n        }, users, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(Edit, {\n          user: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        exact: true,\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/settings\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(SettingsPage, {\n          user: currentUser,\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"9BinHRa4Ur5xqryKFMVPNqdO4EI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Personal/Lateral-Internship/Office/feisbuciuc/New folder/src/components/App.js"],"names":["React","useEffect","useState","Router","Route","Switch","MainApp","Login","Register","Edit","connect","useDispatch","history","SettingsPage","_","axios","App","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","users","setUsers","dispatch","UserStatus","localStorage","getItem","getUsers","get","then","response","data","catch","alert","isEmpty","login","console","log","item","find","_id","logout","setUserToken","token","setItem","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport MainApp from './pages/main/MainApp';\r\nimport Login from './pages/auth/Login';\r\nimport Register from './pages/auth/Register';\r\nimport Edit from '../components/pages/editPost/Edit'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport history from '../history';\r\n\r\nimport SettingsPage from './pages/settings/SettingsPage';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\n\r\n\r\nconst App = () => {\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [users, setUsers] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    const UserStatus =  localStorage.getItem(\"isTrue\") === \"true\"? MainApp : Login;\r\n\r\n\r\n    const getUsers = async () => {\r\n        await axios.get(\"http://localhost:3001/users\")\r\n        .then(response => {\r\n            const data = {...response.data};\r\n\r\n            setUsers(data);\r\n        })\r\n        .catch(() => {\r\n            alert(\"error receiving data\")\r\n        })    \r\n    }\r\n\r\n    useEffect(() => {\r\n        if(_.isEmpty(users)){\r\n            getUsers();\r\n        }\r\n        if(_.isEmpty(users) === false &&_.isEmpty(currentUser) === true && localStorage.getItem(\"isTrue\") === \"true\"){\r\n            login();\r\n        }  \r\n        console.log(currentUser)          \r\n    }, [users, currentUser])\r\n\r\n    const login = () => {\r\n            let item =  _.find(users, { _id: localStorage.getItem(\"token\") } );\r\n            setCurrentUser(item)\r\n    }\r\n\r\n\r\n    const logout = () => {\r\n        setIsLoggedIn(false);\r\n    }\r\n \r\n\r\n\r\n    const setUserToken = (token) => {\r\n            localStorage.setItem(\"token\", token);\r\n            login();\r\n            setIsLoggedIn(true);\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <Router history={history}>\r\n            <Switch>\r\n                <Route path=\"/\" exact \r\n                    render = {(props) => ( \r\n                        <UserStatus key={users} login = { setUserToken } users={ users } user ={ currentUser } /> \r\n                    )}\r\n                />\r\n                <Route path=\"/post\" exact \r\n                    render = {(props) => (\r\n                        <Edit user = { currentUser } />\r\n                    )}\r\n                />\r\n                <Route path=\"/register\" exact component={Register} />\r\n                <Route path=\"/settings\" exact \r\n                 render = {(props) => (\r\n                        <SettingsPage user = { currentUser } logout = { logout } />\r\n                 )} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}